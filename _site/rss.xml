<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
    <title>brendan forster.com</title>
    <link>http://brendanforster.com/</link>
    <atom:link href="http://brendanforster.com/rss.xml" rel="self" type="application/rss+xml" />
    <description></description>
    <language>en-au</language>
    <pubDate>Sun, 23 Sep 2012 21:24:56 +1000</pubDate>
    <lastBuildDate>Sun, 23 Sep 2012 21:24:56 +1000</lastBuildDate>

    
    <item>
      <title>What's my secret? An unoffical unconfirmed guide</title>
      <link>http://brendanforster.com//blog/unofficial-unconfirmed-awesome-guide.html</link>
      <pubDate>Sun, 23 Sep 2012 22:30:00 +1000</pubDate>
      <author>shift.key@gmail.com (Brendan Forster)</author>
      <guid>http://brendanforster.com/blog/unofficial-unconfirmed-awesome-guide.html</guid>
      <description>&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;After surviving &lt;a href=&quot;http://australia.msteched.com/&quot;&gt;TechEd Australia&lt;/a&gt; - as well as hitting some important deadlines for a client - I was looking forward to getting back into various side-projects again now that things are coming back to (realtively) normal.&lt;/p&gt;

&lt;p&gt;I fired off an email looking for tips from my colleagues what they do to help get creative, and one of the replies I got back was this:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;I find the third question silly coming from you. You are one of the the most productive and creative people I know and I wish I knew your secret to it. &lt;br/&gt; &lt;br/&gt;Sorry mate; but you don't get to be an MVP, a main member on Code52, talk at conferences and so on and then ask others how they are productive and creative :p&lt;br/&gt; &lt;br/&gt;Share your secret already ;-)&lt;/p&gt;&lt;/blockquote&gt;


&lt;p&gt;So I owe someone a blog post to explain myself.&lt;/p&gt;

&lt;h2&gt;Brendan's Unofficial Unconfirmed Guide To Being Awesome&lt;/h2&gt;

&lt;p&gt;First up, some warnings:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;This is me speaking from my experiences only.&lt;/li&gt;
&lt;li&gt;I will often suggest things which I do not do. Yes, that makes me appear hypocritical. No, it is not intended.&lt;/li&gt;
&lt;li&gt;Please consult with a medical professional before taking any of the below advice.&lt;/li&gt;
&lt;li&gt;This is all subject to change.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Without further ado, let's dive in...&lt;/p&gt;

&lt;h3&gt;Make time for it&lt;/h3&gt;

&lt;p&gt;While I appreciate that there are many developers who are happy &lt;a href=&quot;http://www.hanselman.com/blog/DarkMatterDevelopersTheUnseen99.aspx&quot;&gt;&quot;dark matter&quot; developers&lt;/a&gt;, I've always seen a correlation between awesome developers and developers who will spend time improving themselves outside of work hours.&lt;/p&gt;

&lt;p&gt;Don't feel bad if you're not someone who obsesses over code outside of work. But don't feel that it's out of reach.&lt;/p&gt;

&lt;p&gt;Not sure where to start? Start small. Set aside a half hour once a week.&lt;/p&gt;

&lt;p&gt;Can't find time in the evenings? Why not try and &lt;a href=&quot;http://99u.com/tips/6954/The-1-Step-Plan-for-Super-Productivity&quot;&gt;get up earlier&lt;/a&gt; instead?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; As many people who know me will testify, I am not a morning person.  I'll generally find a couple of evenings each week to hack on various things late into the night - it's an old habit I still haven't shaken from my university days - as that's when things are quieter and I can focus better on things. Your milage will vary.&lt;/p&gt;

&lt;h3&gt;Set yourself goals (even small ones)&lt;/h3&gt;

&lt;p&gt;To ensure you're making the best of youur spare time, set some goals up front to ensure you work towards something tangible and useful. Starting small with your goals will help.&lt;/p&gt;

&lt;p&gt;To illustrate this, here's a few goals which I would like to work on over the coming weeks/months:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;learn about Neo4J and graph database concepts by building a proof-of-concept accounting webapp&lt;/li&gt;
&lt;li&gt;learn about DirectX and de-rust on my C++ skills by building a Windows 8 app&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;See how they can be considered daunting goals?&lt;/p&gt;

&lt;p&gt;Let's break that first item down a bit:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Read up on concepts behind graph databases&lt;/li&gt;
&lt;li&gt;Getting Neo4J setup on my local machine&lt;/li&gt;
&lt;li&gt;Experimenting with working with Neo4J and the REST API&lt;/li&gt;
&lt;li&gt;Getting a simple webapp setup to interact with Neo4J (Ruby/Python?)&lt;/li&gt;
&lt;li&gt;Sketching out the app idea&lt;/li&gt;
&lt;li&gt;Build out a small piece to demonstrate the app&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;You get the picture - take a big piece of work and break it down into manageable chunks.&lt;/p&gt;

&lt;p&gt;By tackling something in chunks you also get a number of other benefits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;be able to demonstrate learning earlier on (e.g. interacting with an API first before building the app)&lt;/li&gt;
&lt;li&gt;get feedback without investing significant amounts of time (and put it aside if its not fun)&lt;/li&gt;
&lt;li&gt;be able to work on multiple goals at the same thing (rather than procrastinating because you're stumped on something)&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Of course it looks like Dave Tchepak beat me to the punch on this with a &lt;a href=&quot;http://davesquared.net/2012/02/goals-for-devs.html&quot;&gt;more detailed post&lt;/a&gt; earlier in the year, so I'll defer to him on this.&lt;/p&gt;

&lt;h3&gt;Don't just read and watch&lt;/h3&gt;

&lt;p&gt;It's easy to sit down and read some blogs on a topic and think to yourself &quot;Well that was easy!&quot; It's easy to watch some screencasts on a subject and think &quot;I know X now, great!&quot;&lt;/p&gt;

&lt;p&gt;I want to challenge you to go beyond the passive learning and build something based on what you've learned. The size of it doesn't really matter, but I've always found it important to take the things I've learned and apply them to the real world.&lt;/p&gt;

&lt;p&gt;This helps in several ways:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;demonstrating that I was paying attention&lt;/li&gt;
&lt;li&gt;leaving the hand-holding of the blog posts/screencasts and work without that safety net&lt;/li&gt;
&lt;li&gt;reinforcing the learning while it is fresh in my mind&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I love blog posts and screencasts, but these days I try and balancing consuming posts/screencasts and creating things.&lt;/p&gt;

&lt;h3&gt;Don't be afraid to fail&lt;/h3&gt;

&lt;p&gt;It can be daunting when faced with something completely new and unfamiliar. With the amazing pace that technology and software moves at these days, it's impossible to keep up with everything. And that's OK.&lt;/p&gt;

&lt;p&gt;Focus on what you could use at work.&lt;/p&gt;

&lt;p&gt;Focus on what you're interested in.&lt;/p&gt;

&lt;p&gt;Focus on what might make you a better developer.&lt;/p&gt;

&lt;p&gt;Dive in, try something, don't be afraid to make a mistake. Because you will. And that's OK.&lt;/p&gt;

&lt;p&gt;Just make sure you learn from your mistakes, or that you make different mistakes.&lt;/p&gt;

&lt;p&gt;Here's a couple of little experiments I've worked on in the past that haven't come to fruition (yet?):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;bringing WebRat syntax tests to &lt;a href=&quot;/simpler-ui-testing-for-wpf-apps.html&quot;&gt;automating testing of WPF apps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;weaving async/await code to trace when &lt;a href=&quot;https://github.com/shiftkey/Fody.AsyncErrorHandling&quot;&gt;background tasks fail silently&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/shiftkey/winrt-backport-hilarity&quot;&gt;backporting WinRT APIs&lt;/a&gt; to .NET so that libraries and apps can transition to the new APIs more easily&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;I could weep for things that didn't eventuate, but life's too short.&lt;/p&gt;

&lt;h3&gt;Share all the things!&lt;/h3&gt;

&lt;p&gt;And how will we know how awesome you are if you don't tell us?&lt;/p&gt;

&lt;p&gt;After parking my blog ages ago (mostly because I was never really &quot;happy&quot; with it and I'd compulsively tweak things), I've started to come around to Hanselman's words: &lt;a href=&quot;http://www.hanselman.com/blog/YourWordsAreWasted.aspx&quot;&gt;&quot;Every developer should have a blog&quot;&lt;/a&gt;. I'm a habitual Twitter user and thoroughly enjoy the medium for what it is, and I know that I spend time which I should be spending on blogging.&lt;/p&gt;

&lt;p&gt;To compensate for this, I publish a lot of my stuff on &lt;a href=&quot;https://github.com/shiftkey&quot;&gt;GitHub&lt;/a&gt;. Yeah, its lazy. But its out there at least. Even this blog is &lt;a href=&quot;https://github.com/shiftkey/blog&quot;&gt;public&lt;/a&gt; - and its just a static site generated using &lt;a href=&quot;https://github.com/mojombo/jekyll&quot;&gt;Jekyll&lt;/a&gt; and hosted on &lt;a href=&quot;http://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Don't be afraid to write - for example, my last post on &lt;a href=&quot;http://brendanforster.com/notes/git-alias.html&quot;&gt;git aliases&lt;/a&gt; got several &quot;Hey you missed X&quot; comments on it because I wrote it in a rush and missed a couple of details with the end script.&lt;/p&gt;

&lt;p&gt;If people only blogged perfect posts I'd never end up blogging anything.&lt;/p&gt;

&lt;h2&gt;Feedback&lt;/h2&gt;

&lt;p&gt;I'm running out of words and I bet you guys are getting tired of me over-sharing, so I'll tie this one off here. What have I missed? What did I say wrong? Let me know in the comments.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why You Should Care About Git Alias</title>
      <link>http://brendanforster.com//notes/git-alias.html</link>
      <pubDate>Sun, 16 Sep 2012 22:30:00 +1000</pubDate>
      <author>shift.key@gmail.com (Brendan Forster)</author>
      <guid>http://brendanforster.com/notes/git-alias.html</guid>
      <description>&lt;h3&gt;Why do I need alias?&lt;/h3&gt;

&lt;p&gt;One of my favourite bits of &quot;feedback&quot; from Mercurial users is that &quot;you don't need to type out the full command with hg - git is dumb&quot; or something like that. While they're not totally incorrect here, they are comparing the out of the box experiences between git and hg.&lt;/p&gt;

&lt;p&gt;Mercurial will recognise shorthand for commands when you type enough characters to distingush the right command, like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hg com -&amp;gt; hg commit
hg sta -&amp;gt; hg status
hg sum -&amp;gt; hg summary
hg ci -&amp;gt; hg commit 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That's right, hg does &lt;a href=&quot;http://mercurial.selenic.com/wiki/AliasExtension&quot;&gt;aliases&lt;/a&gt; too...&lt;/p&gt;

&lt;p&gt;Git however will scream at you when you mistype a command. And you will swear in return (either at yourself or at git).&lt;/p&gt;

&lt;p&gt;So to save yourself from screaming in the future, you can customise git to recognise custom commands. It will save you so much time.&lt;/p&gt;

&lt;p&gt;Aliases are stored per-user in the &lt;code&gt;.gitconfig&lt;/code&gt; file - or in the &lt;code&gt;.git/config&lt;/code&gt; file for a repository. All the below scripts will install in the global config file - but you can drop the &lt;code&gt;--global&lt;/code&gt; parameter if you don't want that behaviour.&lt;/p&gt;

&lt;h3&gt;Adding shorthand as aliases&lt;/h3&gt;

&lt;p&gt;Here's some shorthand commands for the common git tasks:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git st
git config --global alias.st &quot;status&quot;   
# git co 
git config --global alias.co &quot;checkout&quot; 
# git ci
git config --global alias.ci &quot;commit&quot;   
# git br
git config --global alias.br &quot;branch&quot;   
# git df
git config --global alias.df &quot;diff&quot;     
# git lp
git config --global alias.lp &quot;log -p&quot;   
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These are some of the common examples from the &lt;a href=&quot;http://gitready.com/intermediate/2009/02/06/helpful-command-aliases.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Customising existing commands&lt;/h3&gt;

&lt;p&gt;My favourite example of this is a prettier output from &lt;code&gt;git log&lt;/code&gt; - so you can see at a glance the activity on the branch you are currently working on:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git lg
git config --global alias.lg &quot;log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Of course, someone far smarter than me &lt;a href=&quot;http://www.jukie.net/bart/blog/pimping-out-git-log&quot;&gt;wrote this one&lt;/a&gt;...&lt;/p&gt;

&lt;p&gt;A few simpler ones:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git com -&amp;gt; checkout master
git config --global alias.com &quot;checkout master&quot;

# git fe -&amp;gt; fetch latest changes
git config --global alias.fe &quot;fetch origin&quot;

# git hr -&amp;gt; hard reset state of master
git config --global alias.hr &quot;reset origin/master --hard&quot;

# git me -&amp;gt; get my user name
git config --global alias.me &quot;config user.name&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And you can even embed scripts into an alias. Here's a couple of simple scripts to see what commits have been added for today (by me any by others):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git today
git config --global alias.today &quot;!git all --since='12am' --committer=\&quot;`git me`\&quot;&quot;

# git today-all
git config --global alias.today-all &quot;!git all --since='12am'&quot;

# git bn -&amp;gt; get current branch name
git config --global alias.bn &quot;!git for-each-ref --format='%(refname:short)' `git symbolic-ref HEAD`&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Do you see where we're going with this? :)&lt;/p&gt;

&lt;h3&gt;Mashing commands together&lt;/h3&gt;

&lt;p&gt;Remember how in my &lt;a href=&quot;/notes/my-git-habits.html&quot;&gt;last post&lt;/a&gt; I mentioned a rather verbose workflow for merging in changes?&lt;/p&gt;

&lt;p&gt;Well let's take it away with one simple command: &lt;code&gt;sync&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git sync
git config --global alias.sync &quot;!git update &amp;amp;&amp;amp; git co master &amp;amp;&amp;amp; git pull &amp;amp;&amp;amp; git co @{-1}&quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But that's rather basic - it doesn't actually rebase my branch that I'm on.&lt;/p&gt;

&lt;p&gt;Let's do a slightly different command: &lt;code&gt;resync&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git resync -&amp;gt; sync repository and rebase current branch    
git config --global alias.resync &quot;!sh -c 'BRANCH_NAME=$(git bn) &amp;amp;&amp;amp; git com &amp;amp;&amp;amp; git fe &amp;amp;&amp;amp; git hr &amp;amp;&amp;amp; git rebase master $BRANCH_NAME'&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Note how this one uses aliases defined earlier in the post for readability? Yeah, it's rad.&lt;/p&gt;

&lt;h3&gt;I'm lazy, give me the gist of it (lol pun)&lt;/h3&gt;

&lt;p&gt;I'm checking some other git repos I have lying around to ensure I have all my aliases in one spot, but in the meantime open your &lt;code&gt;~/.gitconfig&lt;/code&gt; file (check &lt;code&gt;C:\Users\{username}\&lt;/code&gt; if you're on Windows) and paste these values under the &lt;code&gt;[alias]&lt;/code&gt; node. If the &lt;code&gt;[alias]&lt;/code&gt; node doesn't exist, create it.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/3732023.js?file=.gitconfig&quot;&gt;&lt;/script&gt;


&lt;p&gt;Got a cool alias you want to share? Fork the gist above!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Git Habits</title>
      <link>http://brendanforster.com//notes/my-git-habits.html</link>
      <pubDate>Sun, 16 Sep 2012 16:30:00 +1000</pubDate>
      <author>shift.key@gmail.com (Brendan Forster)</author>
      <guid>http://brendanforster.com/notes/my-git-habits.html</guid>
      <description>&lt;p&gt;First up, a disclaimer: &lt;strong&gt;This is just one person's opinion and should be treated as such.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you workflow is similar, that's great. If you workflow is radically different, that's great too. With things like git its very easy to have different workflows, so I'll just be speaking from my experiences here.&lt;/p&gt;

&lt;h3&gt;Introduction&lt;/h3&gt;

&lt;p&gt;Generally speaking, my git flow is based off the &lt;a href=&quot;https://github.com/NancyFx/Nancy/wiki/Git-Workflow&quot;&gt;documentation&lt;/a&gt; for contributors to the NancyFx project. When working on features, this is my high-level flow:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a local branch for the feature&lt;/li&gt;
&lt;li&gt;Work on your feature and get it reviewed -- you do code reviews, right?&lt;/li&gt;
&lt;li&gt;Merge the changes into master&lt;/li&gt;
&lt;li&gt;Push the changes up to the remote repository&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;How does that look from the comamnd line?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git checkout -b ReallyCoolFeature master&lt;/li&gt;
&lt;li&gt;... stuff gets done ...&lt;/li&gt;
&lt;li&gt;git add -u . -- add all removes and modifies to the staging area&lt;/li&gt;
&lt;li&gt;git add .    -- add new files to the staging area&lt;/li&gt;
&lt;li&gt;git commit -m &quot;#1234 implemented&quot; -- associating commits with work items is awesomely helpful&lt;/li&gt;
&lt;li&gt;git checkout master&lt;/li&gt;
&lt;li&gt;git pull origin/master&lt;/li&gt;
&lt;li&gt;git merge ReallyCoolFeature&lt;/li&gt;
&lt;li&gt;git push origin master&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Yeah, I like to be explicit with my remotes and branch names in these commands. Haters gonna hate.&lt;/p&gt;

&lt;p&gt;But that's all fairly straight-forward and not really leveraging the &lt;a href=&quot;http://think-like-a-git.net/sections/git-makes-more-sense-when-you-understand-x/example-4-lsd-and-chainsaws.html&quot;&gt;new states of mind&lt;/a&gt; that git makes possible.&lt;/p&gt;

&lt;h3&gt;Rebase all the things&lt;/h3&gt;

&lt;p&gt;Where git truly comes into its own is with rebasing. For those who aren't familiar with it, rebasing allows you to change the history of a branch. This is generally considered very bad&amp;#0153; to do with public repositories but when you use it only locally it gives you so much control over everything.&lt;/p&gt;

&lt;p&gt;For example, have you ever:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;used a branch for multiple, disparate tasks that you wish you could reorder for readability?&lt;/li&gt;
&lt;li&gt;accidentally forgot to save a file and had to spread a task over multiple commits as a result?&lt;/li&gt;
&lt;li&gt;wanted to update an old branch to the latest changes and avoid merge conflicts?&lt;/li&gt;
&lt;li&gt;wanted to split out a branch into multiple branches and process them separately?&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;If you consider a branch to be a chain of commits - with a parent commit representing the creation point of the branch - then rebasing is the operation to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;change the creation point of a branch&lt;/li&gt;
&lt;li&gt;change the order of the commits in a branch&lt;/li&gt;
&lt;li&gt;change the commits in a branch - squash commits together&lt;/li&gt;
&lt;li&gt;remove commits from a branch&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;At this point you are probably thinking &quot;Oh man, I'm going to nuke my branch and lose all my work&quot; but if you look more closely at what the rebase does, you'll find that its a lot safer than you think.&lt;/p&gt;

&lt;p&gt;A rebase operation will&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;set the repository to the new creation point&lt;/li&gt;
&lt;li&gt;create a temporary branch just for this rebase operation&lt;/li&gt;
&lt;li&gt;apply the commits one by one to ensure they apply cleanly&lt;/li&gt;
&lt;li&gt;update the pointers for the branch and remove the temporary branch&lt;/li&gt;
&lt;li&gt;set the repository to the last commit of the new branch&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;When I say &quot;ensure the commits apply cleanly&quot; here, I indicate that git will ensure that additions and subtractions to each file make sense. If they don't (for example, the file has changed significantly enough), it will pause and ask the user to manually confirm the commit.&lt;/p&gt;

&lt;p&gt;At any point during a rebase that requires user input, you can abort and git will roll back to the state it was in before the rebase operation started.&lt;/p&gt;

&lt;h3&gt;Speak English, Brendan!&lt;/h3&gt;

&lt;p&gt;So I got side-tracked a bit just then. Apologies.&lt;/p&gt;

&lt;p&gt;So what do I use rebasing for?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;reordering&lt;/em&gt; - if I do a bit of code cleanup during my work, that remains separate from the current task and can be put before/after when reviewing code&lt;/li&gt;
&lt;li&gt;&lt;em&gt;squashing&lt;/em&gt; - generally speaking, your commits should be granular enough to be easy to follow. But sometimes things go too far and you want to bring related commits together (e.g. missed deleting a file from the previous commit)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;splitting&lt;/em&gt; - if you've got a complex branch you could split it up into multiple branches and integrate them in gradually.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;All of this is possible by using interactive rebase - before it kicks off the operation, it displays the commits available and allows you to specify the operations to perform.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There's two minor differences when you squash commits together. One operation, &lt;code&gt;fixup&lt;/code&gt;, is intended to merge a commit without including the commit message. The other, &lt;code&gt;squash&lt;/code&gt;, will bring the commit message across and allow you to edit the commit message after the squash.&lt;/p&gt;

&lt;h3&gt;Merging is overrated anyway&lt;/h3&gt;

&lt;p&gt;Yes, that might be a controversial thing to say at this point. Merges are considered important to indicate when two branches have been brought together. But I submit to you, the jury of the internet - do we really need it? I'm not advocating abandoning merges at all - they have a purpose, which is to indicate changes additional to the branch being merged in.&lt;/p&gt;

&lt;p&gt;If I can rebase a branch on top of the current master, I've just avoided the need for a merge commit completely (it becomes a fast-forward merge and the pointers are moved forward). I can then push and get on with the next task.&lt;/p&gt;

&lt;p&gt;I guess this comes back to how you use branches. Git works excellently when you create a branch for a task, integrate the code into master, and delete the branch once its reached the end of its useful life.&lt;/p&gt;

&lt;p&gt;Not everyone can work that way (that might be a rant for another day), but I see this a discipline issue rather than a pro/con of the tool itself.&lt;/p&gt;

&lt;h3&gt;My Opinionated Git Flow&lt;/h3&gt;

&lt;p&gt;So with a slight tweak to step 3, my flow becomes:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Create a local branch for the feature&lt;/li&gt;
&lt;li&gt;Work on your feature and get it reviewed -- you do code reviews, right?&lt;/li&gt;
&lt;li&gt;Rebase the branch on master&lt;/li&gt;
&lt;li&gt;Push the changes up to the remote repository&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;How does that look from the comamnd line?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;git checkout -b ReallyCoolFeature master&lt;/li&gt;
&lt;li&gt;... stuff gets done ...&lt;/li&gt;
&lt;li&gt;git add -u . -- add all removes and modifies to the staging area&lt;/li&gt;
&lt;li&gt;git add .    -- add new files to the staging area&lt;/li&gt;
&lt;li&gt;git commit -m &quot;#1234 implemented&quot; -- associating commits with work items is awesomely helpful&lt;/li&gt;
&lt;li&gt;git checkout master&lt;/li&gt;
&lt;li&gt;git pull origin/master master&lt;/li&gt;
&lt;li&gt;git rebase master ReallyCoolFeature&lt;/li&gt;
&lt;li&gt;git checkout master&lt;/li&gt;
&lt;li&gt;git merge ReallyCoolFeature --ff-only&lt;/li&gt;
&lt;li&gt;git push origin master&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Combine that with some hot git alias action (this is getting fairly long as-is), you can strip away much of those commands into a simple &quot;sync&quot; step which you run against the branch you are working on.&lt;/p&gt;

&lt;h3&gt;What's next?&lt;/h3&gt;

&lt;p&gt;I could go on about using &lt;code&gt;reset&lt;/code&gt; and &lt;code&gt;cherry-pick&lt;/code&gt; commands and head further down the git rabbit hole, but I think the next posts should cover these things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git alias&lt;/code&gt; - seriously, this is like crack for scripters&lt;/li&gt;
&lt;li&gt;a general rant about discipline when managing commits - git has corrupted my brain, and I've found myself applying concepts to situations where I have used other VCSes (even TFS, not using git-tfs or tf-git)&lt;/li&gt;
&lt;/ul&gt;

</description>
    </item>
    
    <item>
      <title>Sharing my personal backlog with the world</title>
      <link>http://brendanforster.com//visible-personal-backlog.html</link>
      <pubDate>Mon, 16 Jul 2012 20:30:00 +1000</pubDate>
      <author>shift.key@gmail.com (Brendan Forster)</author>
      <guid>http://brendanforster.com/visible-personal-backlog.html</guid>
      <description>&lt;p&gt;Ever since I got back from holidays a few weeks ago I've been in a bit of a rut trying to tackle the backlog of stuff I've been meaning to do (projects half-done, contributions I've promised other people, things I've been meaning to blog about).&lt;/p&gt;

&lt;h3&gt;The Experiment&lt;/h3&gt;

&lt;p&gt;This experiment comes down to three simple things:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;maintain a list of tasks which need to be done (ordered by priority)&lt;/li&gt;
&lt;li&gt;focus on one thing at a time&lt;/li&gt;
&lt;li&gt;make it visible to the world to add some peer input to the situation&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;For the tool to make this happen, I've decided to use &lt;a href=&quot;https://trello.com/&quot;&gt;Trello&lt;/a&gt;. After using Trello for the Code52 projects in the past, I felt that it was the best fit between ease of administration and ease of viewing.&lt;/p&gt;

&lt;p&gt;The board is hosted at &lt;a href=&quot;https://trello.com/board/public-backlog/50039c94fe5e1f8037b9b583&quot;&gt;https://trello.com/board/public-backlog/50039c94fe5e1f8037b9b583&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;What can you do?&lt;/h3&gt;

&lt;p&gt;You should be able to leave a comment on any of the items currently there. What sort of comments would help? Things like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&quot;Can you explain this one?&quot; (I've been too brief with a task which may be complex)&lt;/li&gt;
&lt;li&gt;&quot;Can you do this sooner?&quot; (this is something you are interested in)&lt;/li&gt;
&lt;li&gt;&quot;Can I help out with this?&quot; (this is something you might be able to help out with)&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;Caveats&lt;/h3&gt;

&lt;p&gt;This is something that I'll flesh out over the next few days and there may be some details missing.&lt;/p&gt;

&lt;p&gt;There are some items on the list which are deliberately vague - I'll indicate which tasks are &quot;teasers&quot; at this point in time, but I've got no issues with you seeing where they sit in my priority queue.&lt;/p&gt;

&lt;p&gt;And there are some things which I just can't plain talk about (but really need to do anyway) so I'll need to figure out a way to represent them properly. Not everything on my plate at the moment is OSS work :)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>So I accidentally a web guy MVP</title>
      <link>http://brendanforster.com//so-i-accidentally-a-web-guy-mvp.html</link>
      <pubDate>Sun, 08 Jul 2012 20:30:00 +1000</pubDate>
      <author>shift.key@gmail.com (Brendan Forster)</author>
      <guid>http://brendanforster.com/so-i-accidentally-a-web-guy-mvp.html</guid>
      <description>&lt;p&gt;So I just had this little email land in my inbox last week.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Congratulations! We are pleased to present you with the 2012 Microsoft MVP Award! This award is given to exceptional technical community leaders who actively share their high quality, real world expertise with others. We appreciate your outstanding contributions in ASP.NET/IIS technical communities during the past year.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After the chaos of first half of the year (which I still want to get back to, just trying to summon the energy again after a brief respite to head over to NDC this year) this caught me off-guard, but has been an honour to accept nonetheless.&lt;/p&gt;

&lt;p&gt;I'll comment a bit further on the details once I've signed away my life and get an idea of what's involved, but given the ASP.NET dev stack (well, the &lt;em&gt;good&lt;/em&gt; bits anyway &lt;em&gt;smileyface&lt;/em&gt;) is now on &lt;a href=&quot;http://aspnetwebstack.codeplex.com/&quot;&gt;Codeplex&lt;/a&gt; I'm keen to spend some time digging into that and helping out wherever my powers might be of benefit.&lt;/p&gt;

&lt;p&gt;There's also shiny things coming along in the upcoming release (I've hacked a bit on Web API, and Single Page Apps is on my radar but I haven't used in anger) which are on my never-ending TODO list.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introducing code52</title>
      <link>http://brendanforster.com//introducing-code52.html</link>
      <pubDate>Tue, 03 Jan 2012 21:30:00 +1100</pubDate>
      <author>shift.key@gmail.com (Brendan Forster)</author>
      <guid>http://brendanforster.com/introducing-code52.html</guid>
      <description>&lt;p&gt;Back from a self-imposed internet break (taking a phone which doesn't do 3G coverage and going rural is a good way to do this) and &lt;a href=&quot;http://twitter.com/aeoth&quot;&gt;Paul&lt;/a&gt; and &lt;a href=&quot;http://twitter.com/tobin&quot;&gt;Tobin&lt;/a&gt; couldn't wait to kick off our new collaborative project.&lt;/p&gt;

&lt;center&gt;&lt;a href=&quot;http://code52.org&quot;&gt;&lt;img class='right ' src='/img/posts/Code52/logo.png' width='' height='' alt='' title=''&gt;&lt;/a&gt;&lt;/center&gt;


&lt;br/&gt;


&lt;p&gt;There's a bit more of a blurb on &lt;a href=&quot;http://code52.org/about.html&quot;&gt;the website&lt;/a&gt; - its an idea we're still wrapping our heads around by using a bit of trial and error.&lt;/p&gt;

&lt;p&gt;We're already hard at work on our &lt;a href=&quot;http://code52.org/downmarker&quot;&gt;first project&lt;/a&gt; and we'd love to see people drop into the &lt;a href=&quot;http://jabbr.net/#/rooms/code52&quot;&gt;Jabbr room&lt;/a&gt; and get involved. Amd pf course, there's a &lt;a href=&quot;http://twitter.com/code_52&quot;&gt;Twitter account&lt;/a&gt; too to follow.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>2011 - Where did the time go?</title>
      <link>http://brendanforster.com//2011-recap.html</link>
      <pubDate>Tue, 20 Dec 2011 23:00:00 +1100</pubDate>
      <author>shift.key@gmail.com (Brendan Forster)</author>
      <guid>http://brendanforster.com/2011-recap.html</guid>
      <description>&lt;p&gt;&lt;article&gt;&lt;/p&gt;

&lt;p&gt;Three more days til Christmas. I intend to unplug completely from the internet from then until the end of the year (place a bet with your nearest bookie on the odds I'll crack before then) so I'm writing this now over a cold beer, wondering where the hell the year went - as well as the hot weather.&lt;/p&gt;

&lt;p&gt;&lt;img class='right ' src='/img/main/recap-lrg.jpg' width='600' height='400' alt='' title=''&gt;&lt;/p&gt;

&lt;p&gt;So where did 2011 go? Let's recap:&lt;/p&gt;

&lt;h2&gt;Perth&lt;/h2&gt;

&lt;p&gt;Work sent me over to Perth to work with a client between February and April. It was an interesting project, but the real fun was catching up with the developer community over beers (and they love their beer over in Perth). Particular shout outs to &lt;a href=&quot;http://twitter.com/jakeginnivan&quot;&gt;Jake Ginnivan&lt;/a&gt; (a &quot;brother from another mother&quot; according to someone who shall remain nameless) and &lt;a href=&quot;http://twitter.com/jtango18&quot;&gt;JT&lt;/a&gt; for making the non-work hours as &lt;a href=&quot;http://www.hulabulabar.com&quot;&gt;entertaining&lt;/a&gt; as humanly possible.&lt;/p&gt;

&lt;p&gt;I also managed to catch up with relatives over there over there (my cousin, her husband and three young kids live in Perth) and see some bands:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://streetlightmanifesto.com/&quot;&gt;Streetlight Manifesto&lt;/a&gt; - two hours in the mosh pit is enought for any man. An item crossed off the bucket list.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://westcoastbluesnroots.com.au/&quot;&gt;West Coast Blues and Roots Festival&lt;/a&gt; - finally got to see Cat Empire live, and a bunch of other artists. Toots and the Maytals was an unexpected pleasure.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;The only downside of my time in Perth was that my grandma passed away after having a stroke last year - it felt weird being away from the family when it all occurred, but I went back for the funeral to say my farewells.&lt;/p&gt;

&lt;h2&gt;NDC and Europe&lt;/h2&gt;

&lt;p&gt;While I was over in Perth, I was also madly planning my Europe trip. It coincided with &lt;a href=&quot;http://www.ndcoslo.com/&quot;&gt;NDC&lt;/a&gt; which was an amazing conference in itself.&lt;/p&gt;

&lt;p&gt;In no particular order:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;pre-drinks with Richard Campbell, Rob Conery, Shay Friedman and others (fairly certain I still owe Richard a Famous Grouse for something).&lt;/li&gt;
&lt;li&gt;three days jam packed with content - I can't recall another event where I'd have three or more sessions in the same timeslot I wanted to see.&lt;/li&gt;
&lt;li&gt;some great parties after the official one ;)&lt;/li&gt;
&lt;li&gt;hammocks to recover in after! (while mocking certain Brits on Twitter)&lt;/li&gt;
&lt;li&gt;an epic technical discussion over post-conference drinks with &lt;a href=&quot;http://twitter.com/kkzomic&quot;&gt;Krzysztof&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/philiplaureano&quot;&gt;Philip&lt;/a&gt; and &lt;a href=&quot;http://twitter.com/gfraituer&quot;&gt;Gael&lt;/a&gt; (I tried to keep up but my brain had been melted over the previous days) before we all went our separate ways.&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt; &lt;center&gt;&lt;img class='' src='/img/posts/recap/hammock.jpg' width='' height='' alt='' title=''&gt;&lt;/center&gt;&lt;/p&gt;

&lt;p&gt;After the conference I headed up to Stavanger with Philip - it was a lot of fun to talk shop while hiking for a couple of hours to what is essentially &lt;a href=&quot;http://i.telegraph.co.uk/multimedia/archive/01359/Stavanger_1359940c.jpg&quot;&gt;a giant rock in the middle of nowhere&lt;/a&gt;. I was also invited to stay a few days with &lt;a href=&quot;http://twitter.com/thomasjo&quot;&gt;Thomas Johanson's&lt;/a&gt; family in rural Norway - which was capped off with a Norweigan BBQ and aquavit!&lt;/p&gt;

&lt;p&gt;After Norway, I spent a weekend in Copenhagen seeing the sights and ran into &lt;a href=&quot;http://umbraco.com/cg11&quot;&gt;some Umbraco guys doing whatever those Umbraco guys do&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then it was onward to Germany (a week of beer and sight-seeing) and France (a week of wine and beer and sight-seeing).&lt;/p&gt;

&lt;p&gt;Highlights:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;the quickest &lt;a href=&quot;/inotifypropertychanged-stop-the-madness.html&quot;&gt;blog post&lt;/a&gt; I've written (about 20 minutes), which still gets mentions in odd places&lt;/li&gt;
&lt;li&gt;having dinner and drinks with a group of Romanian retirees in Berlin. I didn't speak Romanian, they didn't speak English, but the staff were excellent mediators and fun was had by all.&lt;/li&gt;
&lt;li&gt;our pub crawl group being scolded by a German/French waiter in Hofbrauhaus Munich for being too loud with our chanting - &quot;Zis is not Oktoberfest!&quot;.&lt;/li&gt;
&lt;li&gt;visiting the Dachau concentration camp outside Munich and standing inside a gas chamber - an experience I still can't put into words.&lt;/li&gt;
&lt;li&gt;drinking the train's bar cart dry of beer with a gang of tourists when the train from Munich to Paris broke down at Metz for a few hours.&lt;/li&gt;
&lt;li&gt;wandering around Paris and accidentally finding Voltaire's tomb (as well as other famous French figures like Marie Curie) at the Pantheon.&lt;/li&gt;
&lt;/ul&gt;


&lt;center&gt;&lt;img class='' src='/img/posts/recap/voltaire.jpg' width='' height='' alt='' title=''&gt;&lt;/center&gt;




&lt;br /&gt;


&lt;h2&gt;BUILD and Los Angeles&lt;/h2&gt;

&lt;p&gt;Aside from unveiling the new version of Windows, and causing a collective conniption of the .NET community with their &lt;a href=&quot;http://dougseven.com/2011/09/15/a-bad-picture-is-worth-a-thousand-long-discussions/&quot;&gt;marketecture diagrams&lt;/a&gt;, it was an entertaining conference to chat with the guys behind the products. They'd been very quiet for a while, and were keen to talk to anyone at the conference who'd lend them an ear.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Ed:&lt;/strong&gt; &lt;em&gt;I'll come back to this discussion. I do want to fuel &lt;a href=&quot;http://twitter.com/MossyBlog&quot;&gt;someone's&lt;/a&gt; rage on the topic :)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;On top of that there was Legoland - if I was ten years old, it would have been paradise. But I still enjoyed a bunch of things there - the Star Wars Lego was particularly good.&lt;/p&gt;

&lt;center&gt;&lt;img class='' src='/img/posts/recap/cantina.jpg' width='' height='' alt='' title=''&gt;&lt;/center&gt;




&lt;center&gt;The Cantina Bar from A Lost Hope (complete with animatronic band)&lt;/center&gt;




&lt;br /&gt;


&lt;p&gt;Ran into some Aussie friends who are now state-side, like &lt;a href=&quot;http://twitter.com/jthake&quot;&gt;Jeremy Thake&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/damianedwards&quot;&gt;Damian Edwards&lt;/a&gt; (again) and &lt;a href=&quot;http://twitter.com/will_robertson&quot;&gt;Will Robertson&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Community Stuff&lt;/h2&gt;

&lt;p&gt;I branched out into doing more presentations this year - not something deliberate, just opportunities crop up and I do enjoy jumping into the deep end:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;dddMelbourne&lt;/strong&gt; - Ruby and .NET for fun and profit&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Newcastle Coders Group&lt;/strong&gt; - XAML - past, present and future.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RDN Dev Day&lt;/strong&gt; - Practical Applications of the Modern Web&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ALT.NET Sydney&lt;/strong&gt; - Recap from BUILD&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Windows Phone 7 Workshops&lt;/strong&gt; (Sydney and Perth)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;dddBrisbane&lt;/strong&gt; - Windows 8 - Who Moved My Cheese?&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;What's next for 2012?&lt;/h2&gt;

&lt;p&gt;Can I have a good nap and get back to you on that?&lt;/p&gt;

&lt;p&gt;&lt;/article&gt;&lt;/p&gt;

&lt;div style=&quot;margin-top: 50px&quot;&gt;
&lt;em&gt;Image: http://www.flickr.com/photos/opethpainter/2866967426/&lt;/em&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>ALT.NET Open Spaces Recap</title>
      <link>http://brendanforster.com//alt-net-open-spaces-2011.html</link>
      <pubDate>Sat, 03 Dec 2011 19:00:00 +1100</pubDate>
      <author>shift.key@gmail.com (Brendan Forster)</author>
      <guid>http://brendanforster.com/alt-net-open-spaces-2011.html</guid>
      <description>&lt;p&gt;I flew down to Melbourne this weekend to catch up with the locals and talk about various topics around the .NET space. Here's the abridged recap - each session was scheduled for about 30 minutes and we (mostly) stuck to the schedule during the day.&lt;/p&gt;

&lt;p&gt;Disclaimer: I was sleep deprived and recovering from a party the night before. I may be recalling things differently to how they actually happened. Hell, I'm fairly certain I have the sessions listed out of order.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;There's supposed to be a photo here, but the only one I found (that's right, I didn't bother to take photos myself) was on lockerz.com, which seems to be a site that wants your Facebook details in exchange for something called &quot;grab it&quot;. I'm not even going to link to it, that's how disappointed I am...&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;User Groups&lt;/h3&gt;

&lt;p&gt;We started off the day with a discussion on how everyone perceived the user groups they attend - what works, how to grow a user group, discussions and war stories and whatnot. A lot of good ideas came out of this, which will hopefully materialies in the new year.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We had tacked on a session for talking about open source, but that seemed to have fallen through the cracks when the discussion for user groups went on longer than expected. Sadface.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Code Dojo&lt;/h3&gt;

&lt;p&gt;As a follow up of the ALT.NET code dojo recently, the group discussed &lt;a href=&quot;http://codekata.pragprog.com/2007/01/kata_fourteen_t.html&quot;&gt;this kata&lt;/a&gt; and how to solve the problem. Unfortunately things got sidetracked (I was most annoyed I hadn't heard about this 'trigram' concept before) and we didn't get to demonstrate a good TDD design before the session expired. But it was still an entertaining discussion on how to tackle a problem, even if we didn't agree on much.&lt;/p&gt;

&lt;h3&gt;New Frontiers&lt;/h3&gt;

&lt;p&gt;After a quick break, we discussed how languages outside the .NET ecosystem have impacted on .NET and what might be coming down the pipe. A few takeaways from the discussion - some people wanted more concepts to be brought into C#, while others were feeling that the &quot;one language to rule them all&quot; didn't feel right.&lt;/p&gt;

&lt;h3&gt;Refactoring&lt;/h3&gt;

&lt;p&gt;I teamed up with &lt;a href=&quot;http://twitter.com/rbanks54&quot;&gt;Richard&lt;/a&gt; to talk about refactoring existing code, R# tips and tricks, and Richard shouting at me to &quot;no no, go down, not up&quot; when navigating some sample code from ages ago. Was fun.&lt;/p&gt;

&lt;h3&gt;RAD Frameworks&lt;/h3&gt;

&lt;p&gt;And here's where things got entertaining. What started out as a discussion of tools and libraries to simplify building apps.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;First things first:&lt;/strong&gt; as soon as 'RAD' was mentioned, it was a red rag to much of the audience. It wasn't the intent, but all attempts to refocus the discussion failed miserably.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Secondly:&lt;/strong&gt; I was fascinated by the number of people who were anti-third party libraries for their UIs. They preferred to roll their own, but I didn't push the discussion into why. Perhaps this is my background in client apps clouding my perceptions...&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lastly:&lt;/strong&gt; data access. Oh man, I'm sick to death of this discussion. There's so many choices that whenever someone asks why I'm not using XYZ I have to physically force myself to listen. Can we move on as a society?&lt;/p&gt;

&lt;h3&gt;&quot;What if this is as good as it gets?&quot;&lt;/h3&gt;

&lt;p&gt;This was a neat discussion about how someone might go about staying in a technical career with software development and avoid the whole &quot;management&quot; position in the hierarchy. Of course, he was currently doing Sharepoint, so that was noted and made fun of.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A few dedicated souls continued on this thread of discussion at the pub after and came to a concensus that there was a correlation between architect-style roles and a conservative approach to new technologies. We had a number of ideas around how to bridge this gap, but its always been a tricky challenge in my experiences when working with clients.&lt;/em&gt;&lt;/p&gt;

&lt;h3&gt;Code Coverage and Analysis&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/scubamunki&quot;&gt;Shaun&lt;/a&gt; discussed some of his work with code coverage tools and some gotchas with the code. This was the first time I'd heard of OpenCover (&lt;em&gt;audible gasp&lt;/em&gt;), an OSS project he works on, and it was awesome to catch up with him after and have my brain melted by another IL junkie :)&lt;/p&gt;

&lt;h3&gt;Agile Discussion&lt;/h3&gt;

&lt;p&gt;This was the point where I ran out of steam - 4:30am starts will do that to a guy. We discussed how agile projects manage the relationships with stakeholders, &lt;em&gt;scene missing&lt;/em&gt; and something about estimation?&lt;/p&gt;

&lt;p&gt;Anyway, as we wrapped up at about 3ish a few of the group headed to the pub up the road for further discussion. I'd worked in Melbourne last year, so it was great to catch up with the locals again and talk shop.&lt;/p&gt;

&lt;h3&gt;Wrapup&lt;/h3&gt;

&lt;p&gt;Big thanks to &lt;a href=&quot;http://twitter.com/pjimmy&quot;&gt;@pjimmy&lt;/a&gt; for organising the event and to &lt;a href=&quot;http://twitter.com/rbanks54&quot;&gt;Richard&lt;/a&gt; for helping with herding cats in the morning. It was a great event, and hopefully it'll be back bigger and better next year - there's rumours abound about a Sydney event next year.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>jQuery and KnockoutJS in Win8? Sure, why not!</title>
      <link>http://brendanforster.com//jquery-knockout-win8.html</link>
      <pubDate>Wed, 26 Oct 2011 00:00:00 +1100</pubDate>
      <author>shift.key@gmail.com (Brendan Forster)</author>
      <guid>http://brendanforster.com/jquery-knockout-win8.html</guid>
      <description>&lt;p&gt;Apparently this is old news to some. Trendsetters...&lt;/p&gt;

&lt;p&gt;With Windows 8 supporting HTML/JS (I refuse to call anything HTML5 these days - the words have lost all meaning to me, but that's another topic) applications, I was asked if &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt; is supported - with a goal to making JS applications more maintainable.&lt;/p&gt;

&lt;p&gt;As I'd heard it mentioned at BUILD - and hadn't heard a major drama since people have been using the Developer Preview bits - I expected that it worked. However, to confirm this for myself, I found this &lt;a href=&quot;http://social.msdn.microsoft.com/Forums/en-US/winappswithhtml5/thread/66273417-92cd-4a35-b9a1-281d962eff59&quot;&gt;forum thread&lt;/a&gt; on MSDN with a couple of caveats.&lt;/p&gt;

&lt;p&gt;No fire and brimstone? Oh well, I'll just double-check...&lt;/p&gt;

&lt;p&gt;After adding the jQuery file to the project, I modified the &lt;strong&gt;default.html&lt;/strong&gt; file to include the jQuery file &lt;strong&gt;before&lt;/strong&gt; the default.js file. The default.js file contains the bootstrapping code for the application:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/css/default.css&quot; /&amp;gt;
    &lt;strong&gt;&amp;lt;script src=&quot;/js/jquery-1.6.4.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/strong&gt;
    &amp;lt;script src=&quot;/js/default.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;

&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;And at the bottom of the default.js file, I use a simple selector to find a DOM element:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;            // other code

            WinJS.UI.process(&lt;strong&gt;$('#appbar')[0]&lt;/strong&gt;)
                .then(function () { 
                    &lt;strong&gt;$('#home').click(navigateHome);&lt;/strong&gt;
                });

            WinJS.Navigation.navigate(homePage);

            &lt;strong&gt;var host = $('#contentHost');&lt;/strong&gt;
        }
    }

    WinJS.Navigation.addEventListener('navigated', navigated);
    WinJS.Application.start();

})();
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;and started making use of selectors elsewhere instead of document.getElementById to make the code more concise...&lt;/p&gt;

&lt;h2&gt;And what of KnockoutJS?&lt;/h2&gt;

&lt;p&gt;I've only had basic experience with &lt;a href=&quot;http://knockoutjs.com/&quot;&gt;Knockout&lt;/a&gt;, but found an easier scenario to support. I dropped in the code and modified the detailPage template.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/css/default.css&quot; /&amp;gt;
    &amp;lt;link rel=&quot;stylesheet&quot; href=&quot;/css/detailPage.css&quot; /&amp;gt;
    &amp;lt;script type=&quot;ms-deferred/javascript&quot; src=&quot;/js/detailPage.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &lt;strong&gt;&amp;lt;script type=&quot;ms-deferred/javascript&quot; src=&quot;/js/knockout-1.2.1.js&quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/strong&gt;
&amp;lt;/head&amp;gt;

&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;And then went to work making changes:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In detailPage.js&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Before&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function fragmentLoad(elements, options) {
    var item = options &amp;amp;&amp;amp; options.item ? options.item : getItem();
    elements.querySelector('.pageTitle').textContent = item.group.title;

    WinJS.UI.processAll(elements)
        .then(function () {
            elements.querySelector('.title').textContent = item.title;
            elements.querySelector('.content').innerHTML = item.content;
        });
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;After&lt;/em&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function fragmentLoad(elements, options) {
    var item = options &amp;amp;&amp;amp; options.item ? options.item : getItem();
    WinJS.UI.processAll(elements).then(function () { &lt;strong&gt;ko.applyBindings(item);&lt;/strong&gt; });
}
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;&lt;strong&gt;In detailPage.html - declared some bindings using the data-bind attribute&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;div class=&quot;detailPage fragment&quot;&amp;gt;
    &amp;lt;header role=&quot;banner&quot; aria-label=&quot;Header content&quot;&amp;gt;
        &amp;lt;button disabled class=&quot;win-backbutton&quot; aria-label=&quot;Back&quot;&amp;gt;&amp;lt;/button&amp;gt;
        &amp;lt;div class=&quot;titleArea&quot;&amp;gt;
            &amp;lt;h1 class=&quot;pageTitle win-title&quot; &lt;strong&gt;data-bind=&quot;text: group.title&quot;&lt;/strong&gt;&amp;gt;&amp;lt;/h1&amp;gt;

        &amp;lt;/div&amp;gt;
    &amp;lt;/header&amp;gt;
    &amp;lt;section role=&quot;main&quot; aria-label=&quot;Main content&quot;&amp;gt;
        &amp;lt;article&amp;gt;
            &amp;lt;div&amp;gt;
                &amp;lt;header&amp;gt;

                    &amp;lt;h1 class=&quot;title win-contentTitle&quot; &lt;strong&gt;data-bind=&quot;text: title&quot;&lt;/strong&gt;&amp;gt;&amp;lt;/h1&amp;gt;
                &amp;lt;/header&amp;gt;
                &amp;lt;div class=&quot;image&quot; &lt;strong&gt;data-bind=&quot;style: { color: backgroundColor }&quot;&lt;/strong&gt;&amp;gt;&amp;lt;/div&amp;gt;
                &amp;lt;div class=&quot;content&quot; &lt;strong&gt;data-bind=&quot;html: content&quot;&lt;/strong&gt;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;/div&amp;gt;

        &amp;lt;/article&amp;gt;
    &amp;lt;/section&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;So by moving the binding expressions to the UI (like the MVVM pattern that is popular with XAML application) we can lean on frameworks to make our Javascript code easier to maintain. Other components of the default templates have their own binding attributes - &lt;em&gt;data-win-bind&lt;/em&gt; - which I'll explain later, but I find the KnockoutJS syntax more concise.&lt;/p&gt;

&lt;p&gt;In particular the use of &lt;em&gt;textContent&lt;/em&gt; instead of &lt;em&gt;text&lt;/em&gt; to denote a text value? Why? Drop the 'Content' part unless there's a real good reason - it feels like ceremony.&lt;/p&gt;

&lt;p&gt;I'll formulate some more opinions on the WinJS side as I delve deeper....&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>I'm speaking at DDD Brisbane</title>
      <link>http://brendanforster.com//ddd-brisbane.html</link>
      <pubDate>Sun, 23 Oct 2011 00:00:00 +1100</pubDate>
      <author>shift.key@gmail.com (Brendan Forster)</author>
      <guid>http://brendanforster.com/ddd-brisbane.html</guid>
      <description>&lt;p&gt;&lt;img src='/img/main/metro-preview.png' width='400' height='300' alt='' title='' style='float: right;margin-left: 1.5em;'&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://dddbrisbane.com&quot;&gt;dddBrisbane&lt;/a&gt; organisers sent out a call over the weekend to finalise the schedule - some very cool talks that I'm looking forward to seeing (look for the schedule to appear early this week).&lt;/p&gt;

&lt;p&gt;I'm especially honoured to see my session was picked - especially after seeing the depth of Windows 8 talks submitted.&lt;/p&gt;

&lt;p&gt;So what am I talking about?&lt;/p&gt;

&lt;h2&gt;Windows 8 - Who Moved My Cheese?&lt;/h2&gt;

&lt;p&gt;The slides are available on &lt;a href=&quot;http://ddd-windows8.heroku.com&quot;&gt;Heroku&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The source code for the slides are available on &lt;a href=&quot;http://github.com/shiftkey/dddbrisbane&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    

  </channel>
</rss>